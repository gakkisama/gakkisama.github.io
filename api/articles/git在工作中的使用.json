{"title":"git在工作中的使用","uid":"2a2971797cca851bd9cf209160e0971c","slug":"git在工作中的使用","date":"2018-05-14T12:41:34.000Z","updated":"2021-08-14T12:46:25.994Z","comments":true,"path":"api/articles/git在工作中的使用.json","keywords":null,"cover":"https://cover.png","content":"<h1 id=\"工作-git的使用1\"><a href=\"#工作-git的使用1\" class=\"headerlink\" title=\"工作 git的使用1\"></a>工作 git的使用1</h1><p>场景：工作里面经常使用git，自己拉分支，或者多人在一个分支上面开发；之前整理过git的使用方法，但是因为缺少实践，所以没有很深的印象</p>\n<p>参考：vscode安装git的插件，可以可视化工作区、暂存区还有代码diff</p>\n<p>总结：经常使用</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">git pull origin #先拉一下分支\ngit checkout branch # 切换到指定分支\ngit add .&#x2F;指定文件名（带路径）\ngit commit -m &#39;简要描述这次修改&#x2F;解决的问题&#39;\ngit reset HEAD~ #撤销上一次的commit操作\ngit status # 在每一步操作后都可以执行一下，看下现在的状态\ngit pull origin # 再拉一下远程代码，确认冲突\ngit push\ngit reset --soft HEAD^ # 可以成功撤销上一次commit，并且保留代码</code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">git diff branch1 branch2                  # 显示出所有有差异的文件的详细差异\ngit diff branch1 branch2 --stat           # 显示出所有有差异的文件列表\ngit diff branch1 branch2 文件名(带路径)     # 显示指定文件的详细差异\n \ngit remote set-url origin http:&#x2F;&#x2F;新仓库地址   # 直接修改整个仓库的地址\ngit branch --set-upstream-to&#x3D;origin&#x2F;master  # 修改当前本地分支的跟踪</code></pre>\n\n<p><em>代码迁移</em></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F;原代码仓库目录中执行\n&#x2F;&#x2F;1、重命名origin\ngit remote rename origin old-origin\n&#x2F;&#x2F;2、指定新仓库地址\ngit remote add origin http:&#x2F;&#x2F;新仓库地址\n&#x2F;&#x2F;3、上传代码到新仓库\ngit push origin --all\n&#x2F;&#x2F;4、上传tags\ngit push origin --tags\n&#x2F;&#x2F;5、切换分支-------------------------------笔试\ngit checkout -b 分支名\n&#x2F;&#x2F;6、上传分支\ngit push origin --all\n&#x2F;&#x2F;7、如果有多个分支，重复5和6</code></pre>\n\n<p><em>① 创建新分支(本地和远程)</em></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F;1 创建dev_pg分支\ngit branch dev_pg  \n&#x2F;&#x2F;2 切换到新分支(dev_pg)\ngit checkout dev_pg\n&#x2F;&#x2F;3 创建并推送代码到远程分支(dev_pg)\ngit push origin dev_pg\n\ngit checkout -b 分支名：创建分支并切换\n&#x2F;&#x2F;相当于：\ngit branch 分支名   #创建分支\ngit checkout 分支名 #切换分支</code></pre>\n\n<p><em>② 删除分支</em></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F;1 删除本地分支(dev_pg)\ngit branch -D dev_pg\n&#x2F;&#x2F;2 删除远程分支(dev_pg)\ngit branch -r -D origin&#x2F;dev_pg</code></pre>\n\n<p><em>③ 查询分支</em></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 1 列出所有分支(本地及远程) -a（all的意思）\ngit branch -a\n&#x2F;&#x2F; 2 列出远程分支 -r(remote)\ngit branch -r \n&#x2F;&#x2F; 3 列出本地分支 -l(local)\ngit branch -l</code></pre>\n\n<p><em>④ 查询本地git状态</em></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">git status</code></pre>\n\n<p><em>⑤ 合并代码</em></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F;1 切换到合并分支 (例如dev分支开发，需要合并到master分支。则先切换到master分支)\ngit checkout master\n&#x2F;&#x2F;2 合并代码\ngit merge dev\n&#x2F;&#x2F;3 查看是否有冲突\ngit status\n&#x2F;&#x2F;4 再次拉一次代码\ngit pull origin master\n&#x2F;&#x2F;5 推送到远程\ngit push origin master</code></pre>","text":"工作 git的使用1场景：工作里面经常使用git，自己拉分支，或者多人在一个分支上面开发；之前整理过git的使用方法，但是因为缺少实践，所以没有很深的印象 参考：vscode安装git的插件，可以可视化工作区、暂存区还有代码diff 总结：经常使用 git pull origin...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Work","slug":"Work","count":1,"path":"api/tags/Work.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E4%BD%9C-git%E7%9A%84%E4%BD%BF%E7%94%A81\"><span class=\"toc-text\">工作 git的使用1</span></a></li></ol>","author":{"name":"杰瑞","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fc-ssl.duitang.com%2Fuploads%2Fitem%2F201902%2F23%2F20190223171921_ebiun.thumb.400_0.jpeg&refer=http%3A%2F%2Fc-ssl.duitang.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1631535846&t=baad15e2bdfe3e96b75d7bfebfeccabf","link":"/","description":"人生可以热烈如一场拳击，也可以轻盈如一场游戏。这个回合输了，下个回合再起 <br /> @ <b>微信号：jeremyo_0</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"git在工作中的使用（二）","uid":"0037db2f20b465980cd5521f9576bbf4","slug":"git在工作中的使用（二）","date":"2020-05-16T12:47:15.000Z","updated":"2021-08-14T13:05:30.785Z","comments":true,"path":"api/articles/git在工作中的使用（二）.json","keywords":null,"cover":[],"text":"工作 git的使用2问题描述： 现状：本地代码的commit版本为1，远程分支的代码版本为4； 操作：本地修改一些了一些文件（远程也有修改），想要提交到远程分支 ​ —&gt; git 管理会提示有冲突，冲突不只是修改的有冲突的文件，还包括其他 2-4 commit 版本的代码 ...","link":"","photos":[],"count_time":{"symbolsCount":926,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"杰瑞","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fc-ssl.duitang.com%2Fuploads%2Fitem%2F201902%2F23%2F20190223171921_ebiun.thumb.400_0.jpeg&refer=http%3A%2F%2Fc-ssl.duitang.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1631535846&t=baad15e2bdfe3e96b75d7bfebfeccabf","link":"/","description":"人生可以热烈如一场拳击，也可以轻盈如一场游戏。这个回合输了，下个回合再起 <br /> @ <b>微信号：jeremyo_0</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{}}